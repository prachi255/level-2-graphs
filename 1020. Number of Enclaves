    public int ans=0;
    public int numEnclaves(int[][] grid) {
        ans=0;
        //travelling to all 4 corners first
        //1.first row
        for(int c=0;c<grid[0].length;c++){
            if(grid[0][c]==1){
                dfs(0,c,grid);
            }
        }
        //2.last row
           for(int c=0;c<grid[0].length;c++){
            if(grid[grid.length-1][c]==1){
                dfs(grid.length-1,c,grid);
            }
        }
        //3.first col
           for(int c=0;c<grid.length;c++){
            if(grid[c][0]==1){
                dfs(c,0,grid);
            }
        }
        //4.last col
           for(int c=0;c<grid.length;c++){
            if(grid[c][grid[0].length-1]==1){
                dfs(c,grid[0].length-1,grid);
            }
        }
     //   int ans=0;
        //again dfs call
        ans=0;
            for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]==1){
                    dfs(i,j,grid);
                   
                }
            }
        }
        return ans;
    }
     public static int[][]dir={{-1,0},{1,0},{0,-1},{0,1}}; 
    
    public void dfs(int i,int j,int[][]grid){
        grid[i][j]=0;
        ans++;
        
           for(int r=0;r<4;r++){
          int nr=i+dir[r][0];
          int nc=j+dir[r][1];
          
          if(nr>=0 && nc>=0 && nc<grid[0].length && nr<grid.length && grid[nr][nc]==1){
              dfs(nr,nc,grid);
          }
      }
    }
